# ============================================================================
# SentimentTrade - Comprehensive Requirements
# Integrated requirements for all project components:
# - Core trading strategies and backtesting
# - Daily automation system with Telegram alerts
# - FastAPI backend for mobile app
# - Data processing and analysis tools
# ============================================================================

# ============================================================================
# CORE TRADING AND DATA ANALYSIS
# ============================================================================

# Market data and trading
yfinance>=0.2.18                    # Primary data source (Yahoo Finance)
alpaca-trade-api>=3.0.0            # Alpaca trading API
backtrader>=1.9.78                 # Backtesting framework

# Data analysis and numerical computing
pandas>=1.5.0                      # Data manipulation and analysis
numpy>=1.24.0                      # Numerical computing
scipy>=1.11.0                      # Scientific computing
matplotlib>=3.7.0                  # Plotting and visualization
seaborn>=0.12.0                    # Statistical data visualization

# Technical analysis
ta>=0.10.2                         # Technical analysis library
TA-Lib>=0.4.25                     # Advanced technical analysis (optional)
# Note: TA-Lib may require system-level installation:
# macOS: brew install ta-lib
# Ubuntu: sudo apt-get install libta-lib-dev

# ============================================================================
# AUTOMATION AND SCHEDULING
# ============================================================================

# Task scheduling and automation
schedule>=1.2.0                    # Job scheduling for daily runner
python-crontab>=3.0.0             # Cron job management (optional)

# Time and timezone handling
pytz>=2023.3                      # Timezone calculations
python-dateutil>=2.8.2            # Date parsing and manipulation

# ============================================================================
# TELEGRAM INTEGRATION AND ALERTS
# ============================================================================

# Telegram bot for alerts
python-telegram-bot>=20.0         # Telegram bot API
telegram>=0.0.1                   # Alternative telegram library

# ============================================================================
# API AND NETWORKING
# ============================================================================

# HTTP requests and networking
requests>=2.28.0                  # HTTP library
urllib3>=1.26.0                   # HTTP client
httpx>=0.25.0                     # Async HTTP client
aiohttp>=3.9.0                    # Async HTTP client/server

# WebSocket support
websockets>=12.0                  # WebSocket client/server
websocket-client>=1.6.0          # WebSocket client

# ============================================================================
# FASTAPI BACKEND (Mobile App Support)
# ============================================================================

# FastAPI framework
fastapi>=0.104.1                  # Modern web framework
uvicorn[standard]>=0.24.0         # ASGI server
pydantic[email]>=2.5.0            # Data validation
python-multipart>=0.0.6          # Form data parsing

# CORS support for mobile apps
fastapi-cors>=0.0.6              # CORS middleware
python-cors>=1.0.0               # CORS utilities

# ============================================================================
# DATABASE AND PERSISTENCE
# ============================================================================

# Database ORM and drivers
sqlalchemy>=2.0.23               # SQL toolkit and ORM
sqlite3                          # Built into Python (default database)
# Optional PostgreSQL support:
# psycopg2-binary>=2.9.9         # PostgreSQL adapter

# Database migrations
alembic>=1.13.0                  # Database migration tool

# ============================================================================
# AUTHENTICATION AND SECURITY
# ============================================================================

# JWT and authentication
python-jose[cryptography]>=3.3.0  # JWT tokens
PyJWT>=2.8.0                     # JWT implementation
passlib[bcrypt]>=1.7.4           # Password hashing
bcrypt>=4.1.2                    # Password hashing algorithm

# ============================================================================
# CONFIGURATION AND ENVIRONMENT
# ============================================================================

# Environment and configuration
python-dotenv>=1.0.0             # Environment variable loading
configparser>=6.0.0              # Configuration file parsing
pyyaml>=6.0.1                    # YAML configuration support

# ============================================================================
# LOGGING AND MONITORING
# ============================================================================

# Enhanced logging
colorlog>=6.7.0                  # Colored logging output
structlog>=23.2.0                # Structured logging
loguru>=0.7.2                    # Advanced logging (alternative)

# ============================================================================
# ENHANCED DATA SOURCES (Optional)
# ============================================================================

# Alternative data providers
twelvedata>=1.2.0                # Twelve Data API
alpha-vantage>=2.3.1             # Alpha Vantage API
polygon-api-client>=1.12.0       # Polygon.io API
iexfinance>=0.5.0                # IEX Cloud API

# News and sentiment data
newsapi-python>=0.2.7            # News API
textblob>=0.17.1                 # Sentiment analysis
vaderSentiment>=3.3.2            # Sentiment analysis

# ============================================================================
# MACHINE LEARNING AND AI (Optional)
# ============================================================================

# OpenAI integration
openai>=1.3.0                    # OpenAI API client

# Machine learning
scikit-learn>=1.3.0              # Machine learning library
tensorflow>=2.15.0               # Deep learning (optional)
torch>=2.1.0                     # PyTorch (optional)

# Feature engineering
feature-engine>=1.6.0            # Feature engineering tools

# ============================================================================
# ASYNC AND CONCURRENCY
# ============================================================================

# Async support
asyncio>=3.4.3                   # Async programming
aiofiles>=23.2.1                 # Async file operations
asyncio-mqtt>=0.13.0             # Async MQTT client

# ============================================================================
# DOCUMENT AND FILE PROCESSING
# ============================================================================

# Document processing
python-docx>=1.1.2               # Word document processing
openpyxl>=3.1.0                  # Excel file processing
PyPDF2>=3.0.1                    # PDF processing

# CSV and data formats
csvkit>=1.1.1                    # CSV utilities
xlsxwriter>=3.1.9                # Excel writing

# ============================================================================
# DEVELOPMENT AND TESTING
# ============================================================================

# Testing framework
pytest>=7.4.0                    # Testing framework
pytest-cov>=4.1.0                # Coverage reporting
pytest-asyncio>=0.21.0           # Async testing
pytest-mock>=3.12.0              # Mocking utilities

# Code quality
black>=23.0.0                    # Code formatting
flake8>=6.1.0                    # Linting
mypy>=1.7.0                      # Type checking
isort>=5.12.0                    # Import sorting

# Development utilities
ipython>=8.17.0                  # Enhanced Python shell
jupyter>=1.0.0                   # Jupyter notebooks
notebook>=7.0.0                  # Jupyter notebook server

# ============================================================================
# PERFORMANCE AND OPTIMIZATION
# ============================================================================

# Performance monitoring
psutil>=5.9.0                    # System and process utilities
memory-profiler>=0.61.0          # Memory profiling
line-profiler>=4.1.0             # Line-by-line profiling

# Caching
redis>=5.0.0                     # Redis client (optional)
diskcache>=5.6.0                 # Disk-based caching

# ============================================================================
# DEPLOYMENT AND PRODUCTION
# ============================================================================

# Production server
gunicorn>=21.2.0                 # WSGI HTTP Server
supervisor>=4.2.5                # Process control system

# Monitoring and health checks
prometheus-client>=0.19.0        # Prometheus metrics
healthcheck>=1.3.3               # Health check utilities

# ============================================================================
# MOBILE APP SUPPORT
# ============================================================================

# Mobile-specific utilities
qrcode>=7.4.2                    # QR code generation
pillow>=10.1.0                   # Image processing

# ============================================================================
# INSTALLATION NOTES
# ============================================================================

# To install all requirements:
# pip install -r requirements.txt

# For development environment:
# pip install -r requirements.txt
# pip install -e .

# For production environment (minimal):
# pip install yfinance pandas numpy fastapi uvicorn python-telegram-bot schedule python-dotenv requests

# System dependencies that may be required:
# macOS:
#   brew install ta-lib
#   brew install postgresql (if using PostgreSQL)
# 
# Ubuntu/Debian:
#   sudo apt-get install libta-lib-dev
#   sudo apt-get install postgresql-dev (if using PostgreSQL)
#
# Windows:
#   Download TA-Lib from: https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
